{
	"artifacts" : 
	[
		{
			"path" : "src/oGL"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"link_directories",
			"target_link_libraries",
			"set_target_properties",
			"include",
			"find_package",
			"target_include_directories"
		],
		"files" : 
		[
			"src/CMakeLists.txt",
			"CMakeLists.txt",
			"/usr/local/lib/cmake/glfw3/glfw3Targets.cmake",
			"/usr/local/lib/cmake/glfw3/glfw3Config.cmake"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 3,
				"parent" : 0
			},
			{
				"file" : 1
			},
			{
				"command" : 1,
				"file" : 1,
				"line" : 10,
				"parent" : 2
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 14,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 15,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 16,
				"parent" : 0
			},
			{
				"command" : 5,
				"file" : 1,
				"line" : 13,
				"parent" : 2
			},
			{
				"file" : 3,
				"parent" : 7
			},
			{
				"command" : 4,
				"file" : 3,
				"line" : 1,
				"parent" : 8
			},
			{
				"file" : 2,
				"parent" : 9
			},
			{
				"command" : 3,
				"file" : 2,
				"line" : 61,
				"parent" : 10
			},
			{
				"command" : 6,
				"file" : 1,
				"line" : 35,
				"parent" : 2
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g"
				},
				{
					"fragment" : "-std=gnu++20"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 12,
					"path" : "/home/marcus/code/oGL/include"
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					1
				],
				"standard" : "20"
			},
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6
			]
		}
	],
	"id" : "oGL::@145eef247bfb46b6828c",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "-rdynamic",
				"role" : "flags"
			},
			{
				"backtrace" : 3,
				"fragment" : "-L/home/marcus/code/oGL/include",
				"role" : "libraryPath"
			},
			{
				"fragment" : "-Wl,-rpath,/home/marcus/code/oGL/include",
				"role" : "libraries"
			},
			{
				"backtrace" : 4,
				"fragment" : "/usr/local/lib/libglfw3.a",
				"role" : "libraries"
			},
			{
				"backtrace" : 5,
				"fragment" : "/usr/lib/x86_64-linux-gnu/libGLEW.so",
				"role" : "libraries"
			},
			{
				"backtrace" : 6,
				"fragment" : "/usr/lib/x86_64-linux-gnu/libGL.so",
				"role" : "libraries"
			},
			{
				"fragment" : "-Wl,-Bstatic",
				"role" : "libraries"
			},
			{
				"fragment" : "-lrt",
				"role" : "libraries"
			},
			{
				"fragment" : "-Wl,-Bdynamic",
				"role" : "libraries"
			},
			{
				"fragment" : "-lm",
				"role" : "libraries"
			},
			{
				"backtrace" : 11,
				"fragment" : "-ldl",
				"role" : "libraries"
			},
			{
				"fragment" : "-lX11",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "oGL",
	"nameOnDisk" : "oGL",
	"paths" : 
	{
		"build" : "src",
		"source" : "src"
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/main.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/tools/Logger.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/shaders/ShaderProgram.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/render/Camera.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/render/Mesh.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/render/Object.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "src/models/ModelLoader.cpp",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
